{"version":3,"sources":["webpack://lib/../highlight.js/lib/languages/handlebars.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,aAAa;AACxE;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH,mDAAmD,YAAY,EAAE;AACjE,0DAA0D,iBAAiB,EAAE;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,EAAE,WAAW,EAAE;AACrC,sBAAsB,EAAE,OAAO,EAAE;AACjC;AACA,+BAA+B,OAAO,2BAA2B,QAAQ;AACzE;AACA,kBAAkB,EAAE,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAE;AAC/C;AACA,iBAAiB,QAAQ,EAAE,EAAE,EAAE;AAC/B,OAAO;AACP;AACA;AACA;AACA,kBAAkB,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE;AAC3C;AACA,OAAO;AACP;AACA;AACA;AACA,kBAAkB,EAAE,gBAAgB,EAAE;AACtC;AACA,OAAO;AACP;AACA;AACA;AACA,kBAAkB,EAAE,EAAE,WAAW,EAAE,EAAE;AACrC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,kBAAkB,EAAE,WAAW,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,E","file":"react-syntax-highlighter_languages_highlight_handlebars.render-page.js","sourcesContent":["module.exports = function (hljs) {\n  var BUILT_INS = {'builtin-name': 'each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup'};\n\n  var IDENTIFIER_PLAIN_OR_QUOTED = {\n    begin: /\".*?\"|'.*?'|\\[.*?\\]|\\w+/\n  };\n\n  var EXPRESSION_OR_HELPER_CALL = hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {\n    keywords: BUILT_INS,\n    starts: {\n      // helper params\n      endsWithParent: true,\n      relevance: 0,\n      contains: [hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {relevance: 0})]\n    }\n  });\n\n  var BLOCK_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    className: 'name'\n  });\n\n  var BASIC_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    // relevance 0 for backward compatibility concerning auto-detection\n    relevance: 0\n  });\n\n  var ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH = {begin: /\\\\\\{\\{/, skip: true};\n  var PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH = {begin: /\\\\\\\\(?=\\{\\{)/, skip: true};\n\n  return {\n    aliases: ['hbs', 'html.hbs', 'html.handlebars'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH,\n      PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH,\n      hljs.COMMENT(/\\{\\{!--/, /--\\}\\}/),\n      hljs.COMMENT(/\\{\\{!/, /\\}\\}/),\n      {\n        // open raw block \"{{{{raw}}}} content not evaluated {{{{/raw}}}}\"\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{(?!\\/)/, end: /\\}\\}\\}\\}/,\n        contains: [BLOCK_MUSTACHE_CONTENTS],\n        starts: {end: /\\{\\{\\{\\{\\//, returnEnd: true, subLanguage: 'xml'}\n      },\n      {\n        // close raw block\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{\\//, end: /\\}\\}\\}\\}/,\n        contains: [BLOCK_MUSTACHE_CONTENTS]\n      },\n      {\n        // open block statement\n        className: 'template-tag',\n        begin: /\\{\\{[#\\/]/, end: /\\}\\}/,\n        contains: [BLOCK_MUSTACHE_CONTENTS],\n      },\n      {\n        // template variable or helper-call that is NOT html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{\\{/, end: /\\}\\}\\}/,\n        keywords: BUILT_INS,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      },\n      {\n        // template variable or helper-call that is html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{/, end: /\\}\\}/,\n        keywords: BUILT_INS,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      }\n    ]\n  };\n};"],"sourceRoot":""}